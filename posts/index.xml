<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - lppx</title>
        <link>https://example.com/posts/</link>
        <description>所有文章 | lppx</description>
        <generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 09 Jun 2021 10:22:11 &#43;0800</lastBuildDate><atom:link href="https://example.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>unraid使用手册</title>
    <link>https://example.com/20210609-unraid/</link>
    <pubDate>Wed, 09 Jun 2021 10:22:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20210609-unraid/</guid>
    <description><![CDATA[mysql8设置远程访问 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # 登录 mysql -u root -p # 查看用户信息 select host,user,plugin,authentication_string from mysql.user; +-----------+------------------+-----------------------+------------------------------------------------------------------------+ | host | user | plugin | authentication_string | +-----------+------------------+-----------------------+------------------------------------------------------------------------+ | % | root | caching_sha2_password | $A$005$HF7;krfwhkKHp5fPenQm4J2dm/RJtbbyjtCUVdDCcboXQw3ALxsif/sS1 | | localhost | mysql.infoschema | caching_sha2_password | $A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED | | localhost | mysql.session | caching_sha2_password | $A$005$THISISACOMBINATIONOFINVALIDSALTANDPASSWORDTHATMUSTNEVERBRBEUSED | | localhost | mysql.]]></description>
</item><item>
    <title>代码片段</title>
    <link>https://example.com/20210624-snippets/</link>
    <pubDate>Wed, 09 Jun 2021 10:22:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20210624-snippets/</guid>
    <description><![CDATA[模拟点击 1 2 3 4 5 6 7 8 9 10  const btn = document.getElementById(&#39;demo_click&#39;) function simulateClick() { const event = new MouseEvent(&#39;click&#39;, { view: window, bubbles: true, cancelable: true }); btn.dispatchEvent(event); }   ]]></description>
</item><item>
    <title>树莓派使用手册</title>
    <link>https://example.com/20210623-pi/</link>
    <pubDate>Wed, 09 Jun 2021 10:22:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20210623-pi/</guid>
    <description><![CDATA[安装mysql8 1 2 3 4 5  sudo apt install mariadb-server sudo mysql UPDATE user SET password = password(&#39;xxxx&#39;) WHERE user = &#39;root&#39;; UPDATE user SET plugin = &#39;mysql_native_password&#39; WHERE user = &#39;root&#39;; flush privileges;   设置root远程访问
1 2 3  vi /etc/mysql/mariadb.conf.d/50-server.cnf # 注释 port bind-address sudo systemctl restart mariadb   设置账号权限
1 2 3 4  # 重新进入 mysql -u root -p use mysql; GRANT ALL PRIVILEGES ON *.]]></description>
</item><item>
    <title>hackintosh With OC</title>
    <link>https://example.com/20210419-hackintosh/</link>
    <pubDate>Mon, 19 Apr 2021 13:29:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20210419-hackintosh/</guid>
    <description><![CDATA[sites ]]></description>
</item><item>
    <title>linux常用命令</title>
    <link>https://example.com/20201104-linux-command/</link>
    <pubDate>Wed, 04 Nov 2020 15:05:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201104-linux-command/</guid>
    <description><![CDATA[查看端口占用 1 2 3 4 5 6  netstat -lnp|grep 8000 # 进程详细信息 tcp6 0 0 :::9000 :::* LISTEN 8808/main # 查看进程详细信息 kill进程 ps 8808 kill -9 11100   ]]></description>
</item><item>
    <title>go 获取http请求ip</title>
    <link>https://example.com/20201104-go-remoteaddr/</link>
    <pubDate>Wed, 04 Nov 2020 09:44:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201104-go-remoteaddr/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  package main import ( &#34;encoding/json&#34; &#34;flag&#34; &#34;log&#34; &#34;net/http&#34; &#34;strings&#34; ) type CommandModel struct { Port *string } var commandModel CommandModel func main() { initCommandModel() http.]]></description>
</item><item>
    <title>Smart Home</title>
    <link>https://example.com/20201029-smart-home/</link>
    <pubDate>Thu, 29 Oct 2020 10:05:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201029-smart-home/</guid>
    <description><![CDATA[web通过发送http请求，后端使用mqtt发现请求控制设备
go Arduino 读取引脚状态 1  int value = digitalRead(pin);   web ]]></description>
</item><item>
    <title>Vue3学习</title>
    <link>https://example.com/20201026-vue3-learn/</link>
    <pubDate>Mon, 26 Oct 2020 14:34:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201026-vue3-learn/</guid>
    <description><![CDATA[生命周期函数 只能在setup里面使用
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  setup() { onBeforeMount(() =&gt; { console.log(&#39;onBeforeMount!&#39;); }); onMounted(() =&gt; { console.log(&#39;mounted!&#39;); }); onUpdated(() =&gt; { console.log(&#39;updated!&#39;); }); onUnmounted(() =&gt; { console.log(&#39;unmounted!&#39;); }); return {}; }   ref,reactive,isRef,isReactive ref()是用来根据给定的值（number、string、bool等）创建一个响应式的数据对象，ref()函数调用的返回值是个对象，这对象只包含一个value属性，只在setup函数内容访问ref函数需要添加.value
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  &lt;template&gt; &lt;p&gt;{{ name }}&lt;/p&gt; &lt;p&gt;{{ refName }}&lt;/p&gt; &lt;van-button @click=&#34;changeValue&#34; type=&#34;primary&#34;&gt;click&lt;/van-button&gt; &lt;p&gt;用户信息：{{ user.]]></description>
</item><item>
    <title>centos7安装nginx</title>
    <link>https://example.com/20201025-centos-nginx/</link>
    <pubDate>Sun, 25 Oct 2020 14:34:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201025-centos-nginx/</guid>
    <description><![CDATA[安装nginx 1 2  sudo yum -y install nginx # 安装 nginx sudo yum remove nginx # 卸载 nginx   配置nginx yum安装方式 ，配置文件目录在/etc/nginx/nginx.conf 
也可以到conf.d文件夹下，新建web.conf写入配置
常用配置
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  server { listen 9001; index index.html index.htm index.php; root /var/www/lppx-on-hugo/public; #error_page 404 /404.html; #include enable-php.conf; location ~ .]]></description>
</item><item>
    <title>使用systemctl部署golang项目</title>
    <link>https://example.com/20201022-systemctl-go/</link>
    <pubDate>Thu, 22 Oct 2020 23:33:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://example.com/20201022-systemctl-go/</guid>
    <description><![CDATA[编写配置文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  cd /etc/systemd/system vi pxtool.service # pxtool.service [Unit] Description=PXApi [Service] Type=simple Restart=always RestartSec=5s ExecStart=/root/go/src/gin-target/main WorkingDirectory=/root/go/src/gin-target [Install] WantedBy=multi-user.target   每次修改 ExecStart 需要执行systemctl daemon-reload
1 2 3 4 5 6  # 启动 systemctl start pxtool.service # 查看状态 systemctl status pxtool.service # 自启动 systemctl enable pxtool.service   常用 service 操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  # 自启动 systemctlenablenginx.]]></description>
</item></channel>
</rss>
